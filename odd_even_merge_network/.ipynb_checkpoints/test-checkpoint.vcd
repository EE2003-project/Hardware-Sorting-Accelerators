$date
	Wed Dec  8 13:52:52 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module sort_tb $end
$var wire 1 ! y_valid $end
$var reg 1 " clk $end
$var reg 1 # rst $end
$var reg 1 $ x_valid $end
$var integer 32 % j [31:0] $end
$scope module UUT $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 32 & x [31:0] $end
$var wire 1 $ x_valid $end
$var wire 1 ! y_valid $end
$var wire 32 ' y [31:0] $end
$scope module odd_even_merge_i $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 32 ( x [31:0] $end
$var wire 1 $ x_valid $end
$var wire 1 ! y_valid $end
$var wire 32 ) y [31:0] $end
$scope begin genblk1 $end
$var wire 1 * stage0_valid $end
$var wire 32 + stage0_rslt [31:0] $end
$scope module inst_stage0_0 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 16 , x [15:0] $end
$var wire 1 $ x_valid $end
$var wire 1 * y_valid $end
$var wire 16 - y [15:0] $end
$scope begin genblk1 $end
$var wire 1 . stage0_valid $end
$var wire 16 / stage0_rslt [15:0] $end
$scope module inst_stage0_0 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 8 0 x [7:0] $end
$var wire 1 $ x_valid $end
$var wire 1 . y_valid $end
$var wire 8 1 y [7:0] $end
$scope begin genblk3 $end
$scope module cae_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 2 x_0 [3:0] $end
$var wire 4 3 x_1 [3:0] $end
$var wire 1 $ x_valid $end
$var reg 4 4 y_0 [3:0] $end
$var reg 4 5 y_1 [3:0] $end
$var reg 1 . y_valid $end
$upscope $end
$upscope $end
$upscope $end
$scope module inst_stage0_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 8 6 x [7:0] $end
$var wire 1 $ x_valid $end
$var wire 1 7 y_valid $end
$var wire 8 8 y [7:0] $end
$scope begin genblk3 $end
$scope module cae_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 9 x_0 [3:0] $end
$var wire 4 : x_1 [3:0] $end
$var wire 1 $ x_valid $end
$var reg 4 ; y_0 [3:0] $end
$var reg 4 < y_1 [3:0] $end
$var reg 1 7 y_valid $end
$upscope $end
$upscope $end
$upscope $end
$scope module inst_stage1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 16 = x [15:0] $end
$var wire 1 . x_valid $end
$var wire 1 * y_valid $end
$var wire 16 > y [15:0] $end
$scope begin genblk1 $end
$var wire 1 ? valid $end
$var wire 8 @ dout_2 [7:0] $end
$var wire 8 A dout_1 [7:0] $end
$var wire 8 B din_2 [7:0] $end
$var wire 8 C din_1 [7:0] $end
$scope begin genblk2[0] $end
$upscope $end
$scope begin genblk2[1] $end
$upscope $end
$scope begin genblk3[0] $end
$scope module cae_i $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 D x_0 [3:0] $end
$var wire 4 E x_1 [3:0] $end
$var wire 1 . x_valid $end
$var reg 4 F y_0 [3:0] $end
$var reg 4 G y_1 [3:0] $end
$var reg 1 ? y_valid $end
$upscope $end
$upscope $end
$scope module inst_stage0_0 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 8 H x [7:0] $end
$var wire 1 ? x_valid $end
$var wire 1 * y_valid $end
$var wire 8 I y [7:0] $end
$scope begin genblk3 $end
$scope module cae_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 J x_0 [3:0] $end
$var wire 4 K x_1 [3:0] $end
$var wire 1 ? x_valid $end
$var reg 4 L y_0 [3:0] $end
$var reg 4 M y_1 [3:0] $end
$var reg 1 * y_valid $end
$upscope $end
$upscope $end
$upscope $end
$scope module inst_stage0_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 8 N x [7:0] $end
$var wire 1 . x_valid $end
$var wire 1 O y_valid $end
$var wire 8 P y [7:0] $end
$scope begin genblk3 $end
$scope module cae_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 Q x_0 [3:0] $end
$var wire 4 R x_1 [3:0] $end
$var wire 1 . x_valid $end
$var reg 4 S y_0 [3:0] $end
$var reg 4 T y_1 [3:0] $end
$var reg 1 O y_valid $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module inst_stage0_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 16 U x [15:0] $end
$var wire 1 $ x_valid $end
$var wire 1 V y_valid $end
$var wire 16 W y [15:0] $end
$scope begin genblk1 $end
$var wire 1 X stage0_valid $end
$var wire 16 Y stage0_rslt [15:0] $end
$scope module inst_stage0_0 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 8 Z x [7:0] $end
$var wire 1 $ x_valid $end
$var wire 1 X y_valid $end
$var wire 8 [ y [7:0] $end
$scope begin genblk3 $end
$scope module cae_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 \ x_0 [3:0] $end
$var wire 4 ] x_1 [3:0] $end
$var wire 1 $ x_valid $end
$var reg 4 ^ y_0 [3:0] $end
$var reg 4 _ y_1 [3:0] $end
$var reg 1 X y_valid $end
$upscope $end
$upscope $end
$upscope $end
$scope module inst_stage0_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 8 ` x [7:0] $end
$var wire 1 $ x_valid $end
$var wire 1 a y_valid $end
$var wire 8 b y [7:0] $end
$scope begin genblk3 $end
$scope module cae_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 c x_0 [3:0] $end
$var wire 4 d x_1 [3:0] $end
$var wire 1 $ x_valid $end
$var reg 4 e y_0 [3:0] $end
$var reg 4 f y_1 [3:0] $end
$var reg 1 a y_valid $end
$upscope $end
$upscope $end
$upscope $end
$scope module inst_stage1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 16 g x [15:0] $end
$var wire 1 X x_valid $end
$var wire 1 V y_valid $end
$var wire 16 h y [15:0] $end
$scope begin genblk1 $end
$var wire 1 i valid $end
$var wire 8 j dout_2 [7:0] $end
$var wire 8 k dout_1 [7:0] $end
$var wire 8 l din_2 [7:0] $end
$var wire 8 m din_1 [7:0] $end
$scope begin genblk2[0] $end
$upscope $end
$scope begin genblk2[1] $end
$upscope $end
$scope begin genblk3[0] $end
$scope module cae_i $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 n x_0 [3:0] $end
$var wire 4 o x_1 [3:0] $end
$var wire 1 X x_valid $end
$var reg 4 p y_0 [3:0] $end
$var reg 4 q y_1 [3:0] $end
$var reg 1 i y_valid $end
$upscope $end
$upscope $end
$scope module inst_stage0_0 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 8 r x [7:0] $end
$var wire 1 i x_valid $end
$var wire 1 V y_valid $end
$var wire 8 s y [7:0] $end
$scope begin genblk3 $end
$scope module cae_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 t x_0 [3:0] $end
$var wire 4 u x_1 [3:0] $end
$var wire 1 i x_valid $end
$var reg 4 v y_0 [3:0] $end
$var reg 4 w y_1 [3:0] $end
$var reg 1 V y_valid $end
$upscope $end
$upscope $end
$upscope $end
$scope module inst_stage0_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 8 x x [7:0] $end
$var wire 1 X x_valid $end
$var wire 1 y y_valid $end
$var wire 8 z y [7:0] $end
$scope begin genblk3 $end
$scope module cae_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 { x_0 [3:0] $end
$var wire 4 | x_1 [3:0] $end
$var wire 1 X x_valid $end
$var reg 4 } y_0 [3:0] $end
$var reg 4 ~ y_1 [3:0] $end
$var reg 1 y y_valid $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module inst_stage1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 32 !" x [31:0] $end
$var wire 1 * x_valid $end
$var wire 1 ! y_valid $end
$var wire 32 "" y [31:0] $end
$scope begin genblk1 $end
$var wire 1 #" valid $end
$var wire 16 $" dout_2 [15:0] $end
$var wire 16 %" dout_1 [15:0] $end
$var wire 16 &" din_2 [15:0] $end
$var wire 16 '" din_1 [15:0] $end
$scope begin genblk2[0] $end
$upscope $end
$scope begin genblk2[1] $end
$upscope $end
$scope begin genblk2[2] $end
$upscope $end
$scope begin genblk2[3] $end
$upscope $end
$scope begin genblk3[0] $end
$scope module cae_i $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 (" x_0 [3:0] $end
$var wire 4 )" x_1 [3:0] $end
$var wire 1 * x_valid $end
$var reg 4 *" y_0 [3:0] $end
$var reg 4 +" y_1 [3:0] $end
$var reg 1 ," y_valid $end
$upscope $end
$upscope $end
$scope begin genblk3[1] $end
$scope module cae_i $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 -" x_0 [3:0] $end
$var wire 4 ." x_1 [3:0] $end
$var wire 1 * x_valid $end
$var reg 4 /" y_0 [3:0] $end
$var reg 4 0" y_1 [3:0] $end
$var reg 1 1" y_valid $end
$upscope $end
$upscope $end
$scope begin genblk3[2] $end
$scope module cae_i $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 2" x_0 [3:0] $end
$var wire 4 3" x_1 [3:0] $end
$var wire 1 * x_valid $end
$var reg 4 4" y_0 [3:0] $end
$var reg 4 5" y_1 [3:0] $end
$var reg 1 6" y_valid $end
$upscope $end
$upscope $end
$scope module inst_stage0_0 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 16 7" x [15:0] $end
$var wire 1 #" x_valid $end
$var wire 1 ! y_valid $end
$var wire 16 8" y [15:0] $end
$scope begin genblk1 $end
$var wire 1 9" stage0_valid $end
$var wire 16 :" stage0_rslt [15:0] $end
$scope module inst_stage0_0 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 8 ;" x [7:0] $end
$var wire 1 #" x_valid $end
$var wire 1 9" y_valid $end
$var wire 8 <" y [7:0] $end
$scope begin genblk3 $end
$scope module cae_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 =" x_0 [3:0] $end
$var wire 4 >" x_1 [3:0] $end
$var wire 1 #" x_valid $end
$var reg 4 ?" y_0 [3:0] $end
$var reg 4 @" y_1 [3:0] $end
$var reg 1 9" y_valid $end
$upscope $end
$upscope $end
$upscope $end
$scope module inst_stage0_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 8 A" x [7:0] $end
$var wire 1 #" x_valid $end
$var wire 1 B" y_valid $end
$var wire 8 C" y [7:0] $end
$scope begin genblk3 $end
$scope module cae_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 D" x_0 [3:0] $end
$var wire 4 E" x_1 [3:0] $end
$var wire 1 #" x_valid $end
$var reg 4 F" y_0 [3:0] $end
$var reg 4 G" y_1 [3:0] $end
$var reg 1 B" y_valid $end
$upscope $end
$upscope $end
$upscope $end
$scope module inst_stage1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 16 H" x [15:0] $end
$var wire 1 9" x_valid $end
$var wire 1 ! y_valid $end
$var wire 16 I" y [15:0] $end
$scope begin genblk1 $end
$var wire 1 J" valid $end
$var wire 8 K" dout_2 [7:0] $end
$var wire 8 L" dout_1 [7:0] $end
$var wire 8 M" din_2 [7:0] $end
$var wire 8 N" din_1 [7:0] $end
$scope begin genblk2[0] $end
$upscope $end
$scope begin genblk2[1] $end
$upscope $end
$scope begin genblk3[0] $end
$scope module cae_i $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 O" x_0 [3:0] $end
$var wire 4 P" x_1 [3:0] $end
$var wire 1 9" x_valid $end
$var reg 4 Q" y_0 [3:0] $end
$var reg 4 R" y_1 [3:0] $end
$var reg 1 J" y_valid $end
$upscope $end
$upscope $end
$scope module inst_stage0_0 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 8 S" x [7:0] $end
$var wire 1 J" x_valid $end
$var wire 1 ! y_valid $end
$var wire 8 T" y [7:0] $end
$scope begin genblk3 $end
$scope module cae_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 U" x_0 [3:0] $end
$var wire 4 V" x_1 [3:0] $end
$var wire 1 J" x_valid $end
$var reg 4 W" y_0 [3:0] $end
$var reg 4 X" y_1 [3:0] $end
$var reg 1 ! y_valid $end
$upscope $end
$upscope $end
$upscope $end
$scope module inst_stage0_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 8 Y" x [7:0] $end
$var wire 1 9" x_valid $end
$var wire 1 Z" y_valid $end
$var wire 8 [" y [7:0] $end
$scope begin genblk3 $end
$scope module cae_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 \" x_0 [3:0] $end
$var wire 4 ]" x_1 [3:0] $end
$var wire 1 9" x_valid $end
$var reg 4 ^" y_0 [3:0] $end
$var reg 4 _" y_1 [3:0] $end
$var reg 1 Z" y_valid $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module inst_stage0_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 16 `" x [15:0] $end
$var wire 1 * x_valid $end
$var wire 1 a" y_valid $end
$var wire 16 b" y [15:0] $end
$scope begin genblk1 $end
$var wire 1 c" stage0_valid $end
$var wire 16 d" stage0_rslt [15:0] $end
$scope module inst_stage0_0 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 8 e" x [7:0] $end
$var wire 1 * x_valid $end
$var wire 1 c" y_valid $end
$var wire 8 f" y [7:0] $end
$scope begin genblk3 $end
$scope module cae_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 g" x_0 [3:0] $end
$var wire 4 h" x_1 [3:0] $end
$var wire 1 * x_valid $end
$var reg 4 i" y_0 [3:0] $end
$var reg 4 j" y_1 [3:0] $end
$var reg 1 c" y_valid $end
$upscope $end
$upscope $end
$upscope $end
$scope module inst_stage0_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 8 k" x [7:0] $end
$var wire 1 * x_valid $end
$var wire 1 l" y_valid $end
$var wire 8 m" y [7:0] $end
$scope begin genblk3 $end
$scope module cae_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 n" x_0 [3:0] $end
$var wire 4 o" x_1 [3:0] $end
$var wire 1 * x_valid $end
$var reg 4 p" y_0 [3:0] $end
$var reg 4 q" y_1 [3:0] $end
$var reg 1 l" y_valid $end
$upscope $end
$upscope $end
$upscope $end
$scope module inst_stage1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 16 r" x [15:0] $end
$var wire 1 c" x_valid $end
$var wire 1 a" y_valid $end
$var wire 16 s" y [15:0] $end
$scope begin genblk1 $end
$var wire 1 t" valid $end
$var wire 8 u" dout_2 [7:0] $end
$var wire 8 v" dout_1 [7:0] $end
$var wire 8 w" din_2 [7:0] $end
$var wire 8 x" din_1 [7:0] $end
$scope begin genblk2[0] $end
$upscope $end
$scope begin genblk2[1] $end
$upscope $end
$scope begin genblk3[0] $end
$scope module cae_i $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 y" x_0 [3:0] $end
$var wire 4 z" x_1 [3:0] $end
$var wire 1 c" x_valid $end
$var reg 4 {" y_0 [3:0] $end
$var reg 4 |" y_1 [3:0] $end
$var reg 1 t" y_valid $end
$upscope $end
$upscope $end
$scope module inst_stage0_0 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 8 }" x [7:0] $end
$var wire 1 t" x_valid $end
$var wire 1 a" y_valid $end
$var wire 8 ~" y [7:0] $end
$scope begin genblk3 $end
$scope module cae_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 !# x_0 [3:0] $end
$var wire 4 "# x_1 [3:0] $end
$var wire 1 t" x_valid $end
$var reg 4 ## y_0 [3:0] $end
$var reg 4 $# y_1 [3:0] $end
$var reg 1 a" y_valid $end
$upscope $end
$upscope $end
$upscope $end
$scope module inst_stage0_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 8 %# x [7:0] $end
$var wire 1 c" x_valid $end
$var wire 1 &# y_valid $end
$var wire 8 '# y [7:0] $end
$scope begin genblk3 $end
$scope module cae_1 $end
$var wire 1 " clk $end
$var wire 1 # rst $end
$var wire 4 (# x_0 [3:0] $end
$var wire 4 )# x_1 [3:0] $end
$var wire 1 c" x_valid $end
$var reg 4 *# y_0 [3:0] $end
$var reg 4 +# y_1 [3:0] $end
$var reg 1 &# y_valid $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sort_tb $end
$var reg 4 ,# \x[0] [3:0] $end
$upscope $end
$scope module sort_tb $end
$var reg 4 -# \y[0] [3:0] $end
$upscope $end
$scope module sort_tb $end
$var reg 4 .# \x[1] [3:0] $end
$upscope $end
$scope module sort_tb $end
$var reg 4 /# \y[1] [3:0] $end
$upscope $end
$scope module sort_tb $end
$var reg 4 0# \x[2] [3:0] $end
$upscope $end
$scope module sort_tb $end
$var reg 4 1# \y[2] [3:0] $end
$upscope $end
$scope module sort_tb $end
$var reg 4 2# \x[3] [3:0] $end
$upscope $end
$scope module sort_tb $end
$var reg 4 3# \y[3] [3:0] $end
$upscope $end
$scope module sort_tb $end
$var reg 4 4# \x[4] [3:0] $end
$upscope $end
$scope module sort_tb $end
$var reg 4 5# \y[4] [3:0] $end
$upscope $end
$scope module sort_tb $end
$var reg 4 6# \x[5] [3:0] $end
$upscope $end
$scope module sort_tb $end
$var reg 4 7# \y[5] [3:0] $end
$upscope $end
$scope module sort_tb $end
$var reg 4 8# \x[6] [3:0] $end
$upscope $end
$scope module sort_tb $end
$var reg 4 9# \y[6] [3:0] $end
$upscope $end
$scope module sort_tb $end
$var reg 4 :# \x[7] [3:0] $end
$upscope $end
$scope module sort_tb $end
$var reg 4 ;# \y[7] [3:0] $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ;#
bx :#
bx 9#
bx 8#
bx 7#
bx 6#
bx 5#
bx 4#
bx 3#
bx 2#
bx 1#
bx 0#
bx /#
bx .#
bx -#
bx ,#
bx +#
bx *#
bx )#
bx (#
bx '#
x&#
bx %#
bx $#
bx ##
bx "#
bx !#
bx ~"
bx }"
bx |"
bx {"
bx z"
bx y"
bx x"
bx w"
bx v"
bx u"
xt"
bx s"
bx r"
bx q"
bx p"
bx o"
bx n"
bx m"
xl"
bx k"
bx j"
bx i"
bx h"
bx g"
bx f"
bx e"
bx d"
xc"
bx b"
xa"
bx `"
bx _"
bx ^"
bx ]"
bx \"
bx ["
xZ"
bx Y"
bx X"
bx W"
bx V"
bx U"
bx T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
bx L"
bx K"
xJ"
bx I"
bx H"
bx G"
bx F"
bx E"
bx D"
bx C"
xB"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
x9"
bx 8"
bx 7"
x6"
bx 5"
bx 4"
bx 3"
bx 2"
x1"
bx 0"
bx /"
bx ."
bx -"
x,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
x#"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
xy
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
xi
bx h
bx g
bx f
bx e
bx d
bx c
bx b
xa
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
xX
bx W
xV
bx U
bx T
bx S
bx R
bx Q
bx P
xO
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
x?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
x7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
x.
bx -
bx ,
bx +
x*
bx )
bx (
bx '
bx &
b1000 %
1$
x#
0"
x!
$end
#10
1.
17
1X
1a
1"
#20
0"
1#
#30
b0 ;#
b0 -#
b0 D"
b0 E"
b0 n"
b0 o"
b0 ="
b0 >"
b0 g"
b0 h"
b0 ("
b0 )#
b0 "#
b0 (#
b0 !#
b0 3"
b0 ]"
b0 V"
b0 \"
b0 U"
b0 A"
b0 k"
b0 |
b0 u
b0 {
b0 t
b0 ;"
b0 e"
b0 R
b0 K
b0 Q
b0 J
b0 9#
b0 7#
b0 5#
b0 3#
b0 1#
b0 /#
b0 2"
b0 -"
b0 y"
b0 z"
b0 w"
b0 %#
b0 x"
b0 }"
b0 ."
b0 )"
b0 O"
b0 P"
b0 M"
b0 Y"
b0 N"
b0 S"
b0 n
b0 o
b0 l
b0 x
b0 m
b0 r
b0 '"
b0 7"
b0 &"
b0 `"
b0 D
b0 E
b0 B
b0 N
b0 C
b0 H
0#"
06"
b0 5"
b0 4"
01"
b0 0"
b0 /"
0,"
b0 +"
b0 '
b0 )
b0 ""
b0 *"
0t"
b0 |"
b0 $"
b0 b"
b0 s"
b0 {"
0&#
b0 +#
b0 u"
b0 '#
b0 *#
0a"
b0 $#
b0 v"
b0 ~"
b0 ##
0l"
b0 q"
b0 m"
b0 p"
0c"
b0 j"
b0 d"
b0 r"
b0 f"
b0 i"
0J"
b0 R"
b0 %"
b0 8"
b0 I"
b0 Q"
0Z"
b0 _"
b0 K"
b0 ["
b0 ^"
0!
b0 X"
b0 L"
b0 T"
b0 W"
0B"
b0 G"
b0 C"
b0 F"
09"
b0 @"
b0 :"
b0 H"
b0 <"
b0 ?"
0i
b0 q
b0 W
b0 h
b0 p
0y
b0 ~
b0 j
b0 z
b0 }
0V
b0 w
b0 k
b0 s
b0 v
0a
b0 f
b0 b
b0 e
0X
b0 _
b0 Y
b0 g
b0 [
b0 ^
0?
b0 G
b0 +
b0 !"
b0 -
b0 >
b0 F
0O
b0 T
b0 @
b0 P
b0 S
0*
b0 M
b0 A
b0 I
b0 L
07
b0 <
b0 8
b0 ;
0.
b0 5
b0 /
b0 =
b0 1
b0 4
1"
#40
b10 \
b11 ]
b1 c
b101 d
b10 2
b110 3
b1000 9
b1010 :
b110010 Z
b1010001 `
b1100010 0
b10101000 6
b101000100110010 U
b1010100001100010 ,
0"
b101 :#
b1 8#
b11 6#
b10 4#
b1010 2#
b1000 0#
b110 .#
b10 ,#
b1010001001100101010100001100010 &
b1010001001100101010100001100010 (
0#
#50
b110 Q
b10 J
b1010 R
b1000 K
b11 {
b10 t
b101 |
b1 u
b10100110 B
b10100110 N
b10000010 C
b10000010 H
b1010011 l
b1010011 x
b10010 m
b10010 r
b110 5
b1100010 1
b10 4
1.
b1010 <
b1010100001100010 /
b1010100001100010 =
b10101000 8
b1000 ;
17
b11 _
b110010 [
b10 ^
1X
b101 f
b101000100110010 Y
b101000100110010 g
b1010001 b
b1 e
1a
1"
#60
0"
#70
b101 o"
b1 D"
b1010 h"
b10 ="
b1010000 k"
b1 A"
b10100000 e"
b10 ;"
b101000010100000 &"
b101000010100000 `"
b100000010 '"
b100000010 7"
b11 n
b10 o
b101000000000001 W
b101000000000001 h
b110 D
b1000 E
b1010000000000011010000000000010 +
b1010000000000011010000000000010 !"
b1010000000000010 -
b1010000000000010 >
1i
b101 ~
b1010011 j
b1010011 z
b11 }
1y
b10 w
b100001 k
b100001 s
b1 v
1?
b1010 T
b10100110 @
b10100110 P
b110 S
1O
b1000 M
b10000010 A
b10000010 I
b10 L
1"
#80
0"
#90
b1000 >"
b110 g"
b11 E"
b10 n"
b10000010 ;"
b10100110 e"
b110001 A"
b1010010 k"
b10 \"
b1 ]"
b1010 (#
b101 )#
b11000110000010 '"
b11000110000010 7"
b101001010100110 &"
b101001010100110 `"
b10010 M"
b10010 Y"
b1011010 w"
b1011010 %#
1*
b1000 G
b1010100001100010 -
b1010100001100010 >
b110 F
1V
b11 q
b1010011001000011010100001100010 +
b1010011001000011010100001100010 !"
b101001100100001 W
b101001100100001 h
b10 p
b100000 <"
b10 @"
b1000000100000 :"
b1000000100000 H"
b10000 C"
b1 G"
b10100000 f"
b1010 j"
b101000010100000 d"
b101000010100000 r"
b1010000 m"
b101 q"
1"
#100
0"
#110
b1010 ;#
b10100000000000000000000000000000 '
b10100000000000000000000000000000 )
b10100000000000000000000000000000 ""
b10 "#
b110 !#
b10 3"
b11 ]"
b1 V"
b1000 \"
b10 U"
b1010000000000000 $"
b1010000000000000 b"
b1010000000000000 s"
b101 y"
b100110 x"
b100110 }"
b10000000000000 %"
b10000000000000 8"
b10000000000000 I"
b1 O"
b111000 M"
b111000 Y"
b10010 N"
b10010 S"
16"
11"
1#"
1,"
b1010 +#
b10100101 u"
b10100101 '#
b101 *#
b1010010 m"
b10 p"
1l"
b101001010100110 d"
b101001010100110 r"
b10100110 f"
b110 i"
1c"
b10 _"
b100001 K"
b100001 ["
b1 ^"
b11 G"
b110001 C"
b1 F"
b1000 @"
b11000110000010 :"
b11000110000010 H"
b10000010 <"
b10 ?"
1"
#120
0"
#130
b1 -#
b1000 3"
b10 ("
b10 P"
b11 O"
b1 ."
b110 z"
b101 2"
b10 9#
19"
1B"
b10 X"
b100001 L"
b100001 T"
b1 W"
b1000 _"
b10000011 K"
b10000011 ["
b11 ^"
b1000000100000001 %"
b1000000100000001 8"
b1000000100000001 I"
b1 R"
b110 $#
b1100010 v"
b1100010 ~"
b10 ##
1&#
b1010010100000010 $"
b1010010100000010 b"
b1010010100000010 s"
b101 |"
1t"
b10100010000000000000000000000001 '
b10100010000000000000000000000001 )
b10100010000000000000000000000001 ""
b10 5"
1"
#140
0"
#150
b1000 9#
b101 7#
b1 5#
b10 1#
b110 2"
b101 -"
b11 ."
b10 )"
b1000 5"
b101 4"
b1 0"
b10101000010100010000001000000001 '
b10101000010100010000001000000001 )
b10101000010100010000001000000001 ""
b10 +"
b110 |"
b1010011001010010 $"
b1010011001010010 b"
b1010011001010010 s"
b101 {"
1a"
b11 R"
b1000001100100001 %"
b1000001100100001 8"
b1000001100100001 I"
b10 Q"
1J"
1Z"
1"
#160
0"
#170
b10 /#
b101 5#
b11 3#
b110 7#
1!
b10 *"
b101 0"
b11 /"
b10101000011001010011001000100001 '
b10101000011001010011001000100001 )
b10101000011001010011001000100001 ""
b110 4"
1"
#180
0"
#190
1"
#200
0"
#210
1"
#220
0"
#230
1"
#240
0"
#250
1"
#260
0"
#270
1"
#280
0"
#290
1"
#300
0"
#310
1"
#320
0"
#330
1"
#340
0"
#350
1"
#360
0"
#370
1"
#380
0"
#390
1"
#400
0"
#410
1"
#420
0"
#430
1"
#440
0"
#450
1"
#460
0"
#470
1"
#480
0"
#490
1"
#500
0"
#510
1"
#520
0"
#530
1"
#540
0"
#550
1"
#560
0"
#570
1"
#580
0"
#590
1"
#600
0"
